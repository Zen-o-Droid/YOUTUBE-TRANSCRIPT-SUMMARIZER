Gujarati Transcript:
તેથી જ્યારે હું વોટરફોલ કહું છું ત્યારે તમે કંઈક વિશે વિચારી શકો છો કે તમે કોઈ બેંકિંગ એપ્લિકેશન અથવા વીમા એપ્લિકેશન અથવા કેટલાક પોલીસ વિભાગની અરજી જાણો છો તેથી હું કહું છું કે વોટરફોલ મોડેલ તમે ખરેખર વિશાળ એપ્લિકેશનની જેમ વિચારી શકો છો જે તમે જાણો છો કે નાના ભાગોથી બનેલા છે ઉદાહરણ તરીકે કોડ આ એપ્લિકેશનનો ફ્રન્ટ-એન્ડ હોઈ શકે છે આ એપ્લિકેશનમાં દેખીતી રીતે બેક-એન્ડ હશે અને પછી તેમાં કેટલાક ડીએનએસ રૂટ્સ અને થોડી સેવાઓ છે કે જેના પર તે નિર્ભર છે તેથી આ એપ્લિકેશનનો ભાગ કેટલી છે તે ખરેખર વાંધો નથી પરંતુ આ આખી એપ્લિકેશનને એક છિદ્ર એપ્લિકેશન તરીકે મોકલવામાં આવી હતી કે તેઓ દિવસમાં પાછા થતા હતા અને આ વિકાસની આ પદ્ધતિનો ઉલ્લેખ કરવામાં આવ્યો હતો અથવા ધોધની પદ્ધતિ એપ્લિકેશનને મોનોલિથિક એપ્લિકેશન તરીકે ઓળખવામાં આવતી હતી, જો તેને મોનોલિથિક કહેવામાં આવે છે જો હું હું છું તેને યોગ્ય રીતે મોનોલિથિક એપ્લિકેશન લખી શકે છે હવે તમે જાણો છો કે ડી એન્ડ ડીમાં બધું સારું હતું સિવાય કે બે હજારો 2002 ની જેમ અને તે જ સમયે જ્યારે વસ્તુઓ થોડી આત્યંતિક બનવા લાગી કારણ કે ગ્રાહકો પાસે દસ જુદી જુદી આવશ્યકતાઓ હશે જે હવે દરરોજ બદલાઇ જશે જો તમારી પાસે એક જ એપ્લિકેશન હોય તો તમારી પાસે નિષ્ફળતાનો એક જ મુદ્દો છે તેથી જો અમે આ એપ્લિકેશનના આ અંગ ભાગને પણ બદલી રહ્યા હોત અને જો આ ભાગ નિષ્ફળ થવાનો હતો તો આ આખી એપ્લિકેશન બંધ થઈ જશે કામ કરવું જ્યારે લોકોએ સ software ફ્ટવેર વિકાસ પ્રત્યેના વધુ સારા અભિગમો અને તમે આજના વિશ્વની સહસ્ત્રાબ્દીની જરૂરિયાતોને કેવી રીતે પૂર્ણ કરી શકો છો તેના વિશે વિચારણા શરૂ કરી હતી - સ software ફ્ટવેર કેવી રીતે લખવામાં આવે છે અથવા કોઈ પણ એપ્લિકેશન પ્રથમ સ્થાને લખી છે તે અસર કર્યા વિના, જ્યાં ચપળના વિચારો છે વિકાસ ચિત્રમાં આવ્યો જેથી તે સમસ્યાનો એક ભાગ હતો, સમસ્યાનો બીજો ભાગ તે હતો કારણ કે તે એકવિધ એપ્લિકેશન હતી તે સમય હતો કે તે ખરેખર ફેરફારોને દબાણ કરવા માટે જરૂરી છે ઉદાહરણ તરીકે ચાલો કહીએ કે તમારી પાસે એપ્લિકેશન છે અને તમારા ઉત્પાદનમાં ચાલે છે પર્યાવરણ અને તમારી વિકાસ ટીમે ખરેખર એક નવી સુવિધા બનાવી છે અથવા તેઓ હાલની સુવિધામાં ફેરફાર કરે છે હવે તે સુવિધા છે લોકો તે સમસ્યાના બીજા ભાગમાં જવાનું માનવામાં આવે છે કે લોકો તે હલ કરવાનો પ્રયાસ કરી રહ્યા હતા જ્યારે ચપળ ચિત્રમાં આવ્યા ત્યારે હવે ચપળ સરળ શબ્દોમાં મૂકે છે તે એક ફિલસૂફી છે જે ઝડપથી વધુ વ્યવસ્થિત રીતે એપ્લિકેશનને જમાવવા માટે સ્પષ્ટ છે કે ઘણી વધુ વિગતો છે આંખને મળે તે કરતાં પરંતુ એક સરળ વાક્યમાં તે જારનો અર્થ છે કે તમે સ software ફ્ટવેર અથવા કોડની ઝડપી જમાવટ ઇચ્છો છો કે જે તમે લખો છો તે જ સમયે તમે લાંબા સમય સુધી રાહ જોવી લીધા વિના, તમે ખાતરી કરો કે તમારી પાસે ઓછી છે. કોડના ભાગો કે જે ક્લાયંટ પર મોકલી શકાય છે અથવા તમે જે પણ એપ્લિકેશન સાથે કામ કરી રહ્યાં છો તે જ કારણ છે કે રાજાલ આજે અસ્તિત્વમાં છે અને હવે અમે ચપળ દ્વારા તમારો અર્થ શું છે અને તમે ખરેખર આ કેવી રીતે અમલમાં મૂકી શકો છો તે જોવા જઈશું તેથી આ તે છે જે પાછલા ચાર દાયકાઓથી થઈ રહ્યું છે પરંતુ આ આજની દુનિયામાં ખરેખર ઉડશે નહીં કારણ કે દરરોજ ઘણા બધા ફેરફારો દબાણ કરવામાં આવે છે જેથી તમે ખરેખર થોડો પરિવર્તન માટે યોજનાના મહિનાઓમાંથી પસાર થઈ શકતા નથી તેથીજે રીતે એપ્લિકેશનો વિકસિત થાય છે તે બદલાઈ ગઈ છે અને તે જ રીતે એપ્લિકેશનો તૈનાત કરવામાં આવે છે તેથી તમે વોટરફોલ મોડેલો દ્વારા તમારો અર્થ શું છે તે છે હવે મને લાગે છે કે મેં તેને સારી રીતે સમજાવ્યું છે કે ઘણી કંપનીઓ છે જે હજી પણ આ મોડેલને અનુસરે છે પરંતુ દિવસના અંતેતે બધા તમને વધુ ચપળ વિકાસમાં સ્થાનાંતરિત કરવા માટે પ્રયાસ કરી રહ્યાં છે તે કંપનીના કદના આધારે તે એટલું સરળ નથી અને તમે તેની સમીક્ષા કરો જો તમે જોશો કે લોંચ ખરેખર આ સંપૂર્ણ વર્તુળની બહાર છે, એટલે કે જ્યારે પણ તમે કોઈ ફેરફાર કરો ત્યારે તે કંઈક સરળ હોઈ શકે છે, જેમ કે ફક્ત એક લીટી નામ બદલીને નામ બદલી શકાય છે તેથી તે કેટલું નાનું અથવા કેટલું મોટું છે તે મહત્વનું નથી પરિવર્તન કરવામાં આવે તે ક્ષણમાં પરિવર્તન થાય છે તે દેવ પર્યાવરણમાં પણ તૈનાત કરવું પડે છે જેથી તમે કલ્પના કરી હોય તો કોડ સાથે શું થઈ રહ્યું છે તેના પર તમે સતત પ્રતિસાદ મેળવી શકો કે જો તમારે ખરેખર એક કે બે મહિના રાહ જોવી પડી હોય તો તમે કલ્પના કરી છે અઠવાડિયા ફક્ત જો તમે ખરેખર તે પરિવર્તન ઇચ્છતા હોવ કે નહીં તે અંગેનો પ્રતિસાદ મેળવવા માટે, હવે તે વિકાસકર્તાઓના દૃષ્ટિકોણથી થોડો હેરાન કરે છે અથવા નિરાશાજનક હોઈ શકે છે, હું એમ કહી રહ્યો નથી કે હું તમારી આખી એપ્લિકેશનને બદલી રહ્યો છું જે હું કહી રહ્યો છું તે મોડેલ સુંદર છે ઘણા લોકો વિકાસ ટીમ જેવા લોકોને કેન્દ્રિત કરે છે અને ગ્રાહકો અને અંતિમ વપરાશકર્તાઓને વ્યાપક દસ્તાવેજો પર વધુ મહત્વ અને કાર્યકારી સ software ફ્ટવેર આપવામાં આવે છે હવે આ તે કંઈક છે જે આપણા બધાએ કોઈક સમયે નોંધ્યું હશે બરાબર તેથી દરેક એપ્લિકેશનમાં તમામ વર્ગ વિશે 100 પૃષ્ઠો 150 પૃષ્ઠોનો આંતરિક દસ્તાવેજ હશે, એપ્લિકેશન કેવી રીતે બનાવવામાં આવી રહી છે તે પછીની બધી પદ્ધતિઓ પછી શા માટે એપ્લિકેશન બનાવવામાં આવી રહી છે તે અન્ય વિગતોની ભવ્યતાની જેમ માલિક કોણ છે કે તમે વ્યક્તિગત તરીકે તમારે શું બનાવવું છે તેના વિશે પણ ચિંતા નથી કે તમારે શું બનાવવું છે અને તે વિકાસ કાર્યમાં તમે કેટલા દૂર છો તેથી ચપળ કાર્યમાં કાર્યાત્મક એપ્લિકેશનને દસ્તાવેજીકરણ કરતાં વધુ મહત્વ આપવામાં આવે છે કારણ કે જો તમે તેના વિશે વિચારો છો તો કોડ પોતે જ એક દસ્તાવેજીકરણ છે બરાબર જો તમે કોડને કેવી રીતે અર્થઘટન કરવું તે જાણતા હોવ તો તમે કોડને જોઈ શકો છો અને તે દસ્તાવેજીકરણ તરીકે પણ કાર્ય કરી શકે છે જેથી હું એમ કહી રહ્યો નથી કે કોઈ દસ્તાવેજીકરણ નહીં થાય, હું કહી રહ્યો છું તે વિકાસને વધુ મહત્વ આપવામાં આવે છે દસ્તાવેજી ભાગ અને તે પછી તે તમને શોપિંગ કાર્ટ કહેવાતી કોઈ વસ્તુ પર લઈ જશે અને તમે ચુકવણી કર્યા પછી અને તે બધી બાબતો તમારી પાસે ઇમેઇલ સૂચનાઓ છે અને તમે જાણો છો કે આ બધી બાબતો સિનર્જીમાં કામ કરી રહી છે, તેમ છતાં, તે ખરેખર સંપૂર્ણ છે. અંતર્ગત આર્કિટેક્ચરમાં અલગ સેવાઓ સંપૂર્ણપણે અલગ કાર્યો તેથી જો હું આગળના છેડે કોઈ વસ્તુ પર કામ કરી રહ્યો છું તો મારે ખરેખર કેટલોગ અને ખરીદી વિશે ચિંતા કરવાની જરૂર નથી કારણ કે પ્રથમ હું જે લોંચિંગ મેળવી રહ્યો છું તે પહેલાં પણ મને સતત પ્રતિસાદ મળી રહ્યો છે એકવાર અમે તમારા કોડને તે જ સમયે ઉત્પાદનમાં લોંચ કરીશું તે વિશેનો પ્રતિસાદ મને ખરેખર ડરવાની જરૂર નથી કે તે મારી આખી એપ્લિકેશનને તોડી નાખશે કારણ કે તે બધા અલગ માઇક્રો-સર્વિસીસ તરીકે વિકસિત છે તમારી એક સેવા ક્યારેય નહીં કરે કોર્સની બીજી સેવાને અસર કરે છે આશ્રિત સેવાઓ અસરગ્રસ્ત થઈ શકે છે પરંતુ વિચાર એ છે કે તમે ખરેખર નિષ્ફળતાનો એક જ મુદ્દો ઇચ્છતા નથી જે હવે બરણીનો વિચાર છે હવે ચાલો ચાલ ઇ ફોરવર્ડ હવે અમારી નોકરીના નિયમો અને મૂલ્યો શું છે અને પછી કઠોર કરારો પર ગ્રાહક સહયોગ અને યોજનાને અનુસરવાને બદલે બદલાવનો જવાબ આપવા માટે, ચપળ ખરેખર પ્રતિસાદ આધારિત અર્થ છે જ્યારે તમે જાણો છો કે મેનેજરો અને ઉત્પાદન માલિકો પાસે હશે બહુવિધ મીટિંગ્સ તેઓ જે પ્રકારનાં સ software ફ્ટવેર સાથે આવશે કે તેઓએ દરેક વસ્તુની ખરીદી ત્રણ ચાર મહિનાની જેમ કરવામાં આવશે અને પછી લોકો આ યોજનાને વળગી રહેવા માંગશે કારણ કે જો તમે પણ બદલવા માંગતા હોવ તો હવે તમે આ વસ્તુની યોજના બનાવતા ચાર મહિના ગાળ્યા છે. આની આખી મીટિંગ્સ અને પ્લાનિંગનો થોડો ભાગ ફરીથી આખા ચપળ ફેરફારો કરવો પડશે કે ચપળ ફેરફારો ફક્ત એટલા માટે કરવામાં આવ્યું છે કે આ યોજના બનાવવામાં આવી છે તેનો અર્થ એ નથી કે કોઈ ફેરફાર થઈ શકતો નથી કારણ કે તમે વસ્તુઓ તોડી નાખી છે કાર્યોના નાના ભાગમાં નીચેના કોઈપણ કાર્યોમાં કોઈપણ સમયે આવશ્યકતાઓ અનુસાર ફેરફાર કરી શકાય છે જેથી આ તે મૂલ્યો છે જે ચપળ ટેબલ પર લાવે છે પરંતુ તે ખરેખર એવું નથી કે આપણે ખરેખર તે જોવા જઈશું કે જ્યારે તમે ખરેખર કામ કરી શકો છો અથવા તમે જે ટીમ સાથે કામ કરી રહ્યાં છો તેની નોકરીમાં તમે કેવી રીતે કામ કરી શકો છો તે વિશે તમે કેવી રીતે ભાવિ સ્લાઇડ્સ વિશે જાણો છો તે બધાને તમે કેવી રીતે જાણો છો.વધુ હવે ચપળના ફાયદાઓ શું તમે જાણો છો કે તમે આ બધી બાબતોને ટચ કરી છે હવે પર્સનન્સ સોફ્ટવેર ડિલિવરીમાં વધારો હિસ્સેદાર સંતોષ અને કોઈપણ તબક્કે ડિઝાઇનમાં પરિવર્તનનું સ્વાગત છે તે મહત્વનું છે અને હવે દૈનિક ક્રિયાપ્રતિક્રિયાઓ સંપૂર્ણ પ્રસ્તુતિનું માંસ આવે છેહવે તમારી પાસે પર્શિયાનો મૂળભૂત વિચાર છે પરંતુ તે પ્રશ્ન છે કે દરેક સમયે દરેક સમયે તે મારા માટે શું છે અને પછી તેમની પાસે પોતાનું ફિલસૂફી છે જે તેમની સંસ્થા માટે કામ કરે છે પરંતુ સ્ક્રમ તે છે જેનો ઉપયોગ મોટાભાગના લોકો દ્વારા કરવામાં આવે છે તેથી તમે સ્લાઇડને જોતા પહેલા જ જોતા પહેલા જ અમે સ્લાઇડમાં જે જોઈએ છીએ તેમાંથી પસાર થવું તે પહેલાં જ તમે જાણો છો હું તમને તે રીતે જાણું છું તે રીતે સ્ક્રેમ્પી સમજાવો કારણ કે મેં બહુવિધ વિકાસ ટીમો સાથે કામ કર્યું છે જે મેં આમાંના મોટાભાગનાને અમલમાં મૂકતા જોયા છે અને હું જાણું છું કે તેમાંના દરેક વાસ્તવિક વિશ્વના ઉદાહરણમાં કેવી રીતે કાર્ય કરે છે તેથી સ્ક્રમ શું છે તેથી સ્ક્રમ મૂળભૂત રીતે પુનરાવર્તિત છે ફિલસૂફીનો અર્થ છે કે તમે એક સમયે જમાવટ અને સ software ફ્ટવેર ડેવલપમેન્ટ પર તમે જે પરિવર્તનનો વેપાર કરો છો તેના પર હું વેપાર કરું છું તેથી જો તમે સ્ક્રમ સ્ક્રમ વિશે વાત કરવા માંગતા હો, તો યોજનાનું પુનરાવર્તન છે પછી કાસ બનાવો અને પછી સમીક્ષા કરો હવે તમે સતત બધા પર પુનરાવર્તિત થશો આ પાસાંઓમાંથી હવે મારો આનો અર્થ શું છે તેથી ચાલો પ્રથમ જોઈએ કે સ્ક્રમ અમલમાં મૂકાયેલ ટીમ કેવી રીતે અથવા કેવા લાગે છે તે સ્ક્રમ અમલમાં મૂકાયેલી ટીમમાં તમારી પાસે પહેલી વ્યક્તિ છે કે હું કોઈની કોર્ની વિશે વાત કરવા માંગું છું આરએસ પ્રોડક્ટ માલિક હવે જ્યારે હું પ્રોડક્ટ માલિક કહું છું કે જો તમે તમારી પાસેથી આવો છો તો પરંપરાગત સ software ફ્ટવેર વિકાસ પર્યાવરણને વધુ ખબર છે તમે કોઈ ઉત્પાદન માલિકને મેનેજર તરીકે વિચારી શકો છો તે વ્યક્તિ છે કે જે એપ્લિકેશન તૈનાત છે તેની ખાતરી કરવાની જવાબદારી ધરાવે છે જેમ અને જ્યારે તે જ સમયે પ્રતિબદ્ધ હોય ત્યારે એપ્લિકેશન બરાબર બાંધવાની રીતની જેમ બાંધવામાં આવે છે તેથી ઉત્પાદન માલિક તે વિચારો સાથેનો વ્યક્તિ છે જે તે તકનીકી વ્યક્તિ ન હોઈ શકે, તે તે મેનેજમેન્ટમાંથી એક વ્યક્તિ પણ હોઈ શકે છે વિકાસ અથવા તકનીકીતાને વિગતવાર રીતે જાણવી જરૂરી નથી કે તે આ વિચાર સાથેનો વ્યક્તિ છે અને એપ્લિકેશનના માલિક કે જે તેના પર ખૂબ જ જવાબદારી વિકસિત કરવામાં આવશે અને પછી ત્યાં કોઈ સ્ક્રમ માસ્ટર કહે છે હવે સ્ક્રમ માસ્ટર છે કોઈક કે જેને તમે પરંપરાગત રીતે ટીમ લીડર અથવા પ્રોજેક્ટ માલિક તરીકે ઓળખાવ્યા હોત હવે તમે વંશવેલો અર્થમાં ટીમ લીડર તરીકે સ્ક્રમ માસ્ટર વિશે વિચારી શકો છો આ તે વ્યક્તિ છે જે નીચે છે ઉત્પાદન માલિક અને આ તે વ્યક્તિ છે જે ખરેખર ડેટા કરે છે અથવા દૈનિક કામગીરીને સંભાળે છે જેમ કે તમે જાણો છો કે મીટિંગ્સ ચલાવવી અથવા જે કાર્યો કરવામાં આવે છે તે સોંપવું અને પછી તમારી પાસે ટીમ છે જેમાં તમારા વિકાસકર્તાઓનો સમાવેશ થશે અને પરીક્ષકો અને તમે જાણો છો કે તમારી આવશ્યકતાને આધારે તેમાં થોડી વધુ ભૂમિકાઓ હોઈ શકે છે પરંતુ તે પછી તમારી પાસે વાસ્તવિક ટીમ છે પરંતુ અમે કાર્યો ચલાવીશું જેથી આ તમારી પાસેની ત્રણ ભૂમિકાઓ છે, પરંતુ હવે અમે તે લોકોને જાણીએ છીએ કે કેવી રીતે શામેલ છે કે કેવી રીતે સામેલ છે બરાબર આ કામો મારો અર્થ એ છે કે આ તમે તમારી office ફિસમાં જે કરો છો તેનાથી ખૂબ સમાન લાગે છે તે ફક્ત ફેન્સી નામો છે તેથી તમે તમારી office ફિસમાં જે કરો છો તેનાથી તે કેવી રીતે અલગ છે તેથી હવે અમે તે જોવા માંગીએ છીએ મને આશા છે કે હવે તમારી ભૂમિકાઓ સ્પષ્ટ છે કે તમારી ભૂમિકાઓ વ્યાખ્યાયિત છે ચાલો વિકાસ વિશેની પ્રથમ વસ્તુ જોઈએ તેથી વિકાસનો પ્રથમ ભાગ કે જેને આપણે તેના પ્રોડક્ટ બેકલોગ્સ કહેવા માગીએ છીએ તે અહીં છે જ્યાં વસ્તુઓ તમે પરંપરાગત વાતાવરણમાં હવે પરંપરાગત વાતાવરણમાં કેવી રીતે કામ કરી રહ્યા છો તેનાથી થોડું અલગ થવાનું શરૂ કરે છે જે તમારી પાસે પહેલેથી જ પ્લાનિંગ કરવામાં આવી છે મહિનાઓથી અને તમે અન્ય લોકો સાથે એપ્લિકેશન જમાવવાનું કામ કરી રહ્યાં છો, પરંતુ હું આશા રાખું છું કે તમને ખ્યાલ આવશે કે તેને સ્પ્રિન્ટ કહેવામાં આવે છે હવે તમે તેમને વિધિઓ અથવા ધાર્મિક વિધિઓ કહી શકો છો, પરંતુ સ્પ્રિન્ટ પ્લાનિંગ નામનું કંઈક છે હવે સ્પ્રિન્ટ પ્લાનિંગ ફરીથી તે ફક્ત એક ફેન્સી છે સ્પ્રિન્ટ પ્લાનિંગ દરમિયાન તમારી પાસે જે બનાવવા અને ચર્ચાઓનું નામ ઉત્પાદન માલિક ખરેખર તે સમજાવશે કે તે અંતિમ લક્ષ્ય અથવા એપ્લિકેશનને જોવા માટેના ઉત્પાદનની કલ્પના કેવી રીતે કરે છે જેમ કે તમારી પાસે સ્પ્રિન્ટ પ્લાનિંગ તરીકે ઓળખાતું કંઈક છે, તમારી પાસે તેના દૈનિક સ્ક્રમ કહે છે હવે દૈનિક સ્ક્રમ તમે જાણો છો તે 15 મિનિટની મીટિંગ કરતાં વધુ કંઈ નથી જે દરરોજ થાય છે જ્યાં વિકાસકર્તાઓ અને પરીક્ષકો અને રમતમાં તમારી પાસેની અન્ય ભૂમિકા ખરેખર શું થયું અને તમે ક્યાં stand ભા છો તો ચર્ચા કરો કે જો તમને કોઈ થકી કોઈ થકીની કોઈ સહાયની જરૂર હોય અને તમે આજે અથવા કાલે શું કરવાની યોજના કરો છો અને પછી સ્પ્રિન્ટ રિવ્યૂ કહેવામાં આવે છે તેથી સ્પ્રિન્ટ સમીક્ષા ખરેખર વપરાશકર્તા વાર્તા અથવા યુદ્ધના અંતમાં થાય છે કે તમે કામ કરી રહ્યાં છો તેથી આ દરેક વપરાશકર્તા વાર્તાઓ સામાન્ય રીતે તેઓ સામાન્ય રીતે બે અઠવાડિયાની સમયરેખાને ધ્યાનમાં રાખીને બનાવવામાં આવે છે હવે કેટલીક કંપનીઓ સ્પ્રિન્ટની જેમ બદલાઇ શકે છે, જેમ કે તે બે અઠવાડિયાથી ચાર અઠવાડિયા હોઈ શકે છે, પરંતુ બહુમતીમાં દરેક સ્પ્રિન્ટ બે અઠવાડિયા સુધી ચાલશે જેથી તમે જાણતા હોવ કે તમે આગામી બે અઠવાડિયા માટે હવે બે અઠવાડિયાના અંતે શું કરવાનું છે તે સાથે તમે જાણો છો કે એકવાર તમારી એસપીઆરઆઈ એકવાર તમારી દૈનિક મીટિંગ્સની યોજના બનાવી રહ્યા છો એનટી પૂર્ણ થયું છે તમારી પાસે સ્પ્રિન્ટ સમીક્ષા છે તેથી તાર્કિક રીતે હું મારા ચુકવણી પ્રોસેસર ઉપર મારા ફ્રન્ટ-એન્ડને પ્રાધાન્ય આપવા માંગું છું જેથી સ્ક્રમ માસ્ટર અને ઉત્પાદન માલિક તમારી પાસેની વપરાશકર્તા વાર્તાઓને પ્રાધાન્ય આપશે અને જે પ્રાથમિકતાઓ પર આધાર રાખીને કહેવામાં આવે છે કે તેઓ સ્પ્રિન્ટ બેકલોગને સ્પ્રેડ બ back કલોગ નામની કંઈક સાથે આવે છે જ્યારે તમારી વિકાસ ટીમ ખરેખર આમાં સામેલ થાય છે કારણ કે હવે તમારી પાસે પહેલેથી જ એક સંગઠિત અને પ્રાધાન્યવાળી વપરાશકર્તા વાર્તાઓ છે કે તમે કામ કરી રહ્યા છો તેથી દસ જુદી જુદી વસ્તુઓ તમારા પર ફક્ત તે જ સમયે ડમ્પ કરવામાં આવતી નથી, તે જ સમયે તમને તાર્કિક અને વાજબી આપવામાં આવે છે કાર્યો કે જેને એક સમયે એક્ઝેક્યુટ કરવું પડે છે અને એકવાર તેની પાસે સ્પ્રિન્ટ બેકલોગ આવે છે, ત્યારે તમે ખરેખર તેના પર વિકાસ તરીકે કામ કરવાનું શરૂ કરી શકો છો હવે હું આ સુંદર ડ્રોઇંગથી છૂટકારો મેળવીશ જે હવે માટે બનાવવામાં આવે છે, ચાલો હવે ફક્ત એક સ્પ્રિન્ટ જોઈએ બેકલોગ પરંતુ તમે જાણો છો કે ભાગ તમારી પાસેની એપ્લિકેશનમાં એસેમ્બલ થવા માટે તૈયાર છે તેથી વિચાર દર બે અઠવાડિયાના અંતે છે તમારી પાસે એપ્લિકેશનનો શિપબલ ભાગ છે જે ડી બનવા માટે તૈયાર છે એક વિશાળ એપ્લિકેશનને કામ કરવાને બદલે એક વર્ષ લીધો હોત, હવે તમે તેને એક પ્રકારની વસ્તુઓમાં તોડી નાખશો જે ઉત્પાદનના માલિક અને સ્ક્રમ માસ્ટર દ્વારા નક્કી કરવામાં આવેલી પ્રાથમિકતાઓને આધારે બે અઠવાડિયામાં મોકલી શકાય છે કાર્યોના નાના ભાગમાં નાના ભાગમાં નાના ભાગમાં બધું તોડવા માટે સ્ક્રમનો વિચાર છે, જેથી દરેકને બરાબર ખબર પડે કે તેઓ જે કરવાનું છે તે તેના પદ્ધતિસરના ભાગની જેમ છે, તમારી પાસે એક પદ્ધતિ છે ત્યાં એક વિશિષ્ટ શ્રેષ્ઠ સમૂહ છે તકનીકી બાજુની સાથે તમે જે પ્રથાઓને અનુસરો છો કારણ કે તમે કોઈ કોડ લખો તે ક્ષણે તમારી પાસે ઝડપી જમાવટ છે, તમે ખરેખર તેને દેવ પર્યાવરણમાં ચકાસી શકો છો જ્યાં મારા જેવા લોકો ડેવઓપ્સ ચિત્રમાં આવે છે પરંતુ વિચાર એ છે કે તમારે હમણાં જ કોડને દબાણ કરો છો તે જોવા માટે તમારે ખરેખર એક મહિનાની રાહ જોવી પડશે નહીં, જો તમે હમણાં મિનિટની બાબતમાં કોડને દબાણ કરો છો, તો તમે ખરેખર તે દેવ પર્યાવરણમાં કામ કરવાનું જોશો જેથી તે તકનીકી બાજુ છેતમારે આગળ વધવું પડશે કે નહીં તે શોધવા માટે તમારી પાસે ત્વરિત પ્રતિસાદ છે અથવા તમે જાણો છો કે તમારે હવે જે કોડ છે તેમાં થોડો ફેરફાર કરવો પડશે કે હવે તે ક્રમ્બ અને સામાન્ય રીતે ચપળ છે, તો બીજી પદ્ધતિ છે તેથી સ્ક્રમ એક હતીફિલોસોફી અથવા ફ્રેમવર્ક પછી તમારી પાસે આત્યંતિક પ્રોગ્રામિંગ તરીકે ઓળખાતું કંઈક છે હવે આ પ્રથમ લોકોમાંનું એક હતું, વિકાસકર્તાઓનું જૂથ 2001 માં તેની સાથે આવ્યું હતું. તેથી તેઓ એક પ્રકારનો ચપળ વિકાસના વિચાર સાથે આવ્યા હતા તેઓ શ્રેષ્ઠ પ્રયાસોનો સમૂહ લઈને આવ્યા હતા અને પછી તેઓએ એક મેનીફેસ્ટ પર પણ હસ્તાક્ષર કર્યા હતા જેથી તેઓ ખરેખર એક મેનીફેસ્ટ સાથે આવ્યા કે તમે જાણો છો કે આ તે બાબતો છે જે આપણે અનુસરવી જોઈએ ઉદ્યોગ આ શ્રેષ્ઠ પ્રયાસો છે અને આ સિદ્ધાંતો છે અને તેઓએ તેના પર હસ્તાક્ષર પણ કર્યા છે જેથી આત્યંતિક પ્રોગ્રામિંગ લગભગ કેટલાક દાયકાઓથી આસપાસ છે અને સ્ક્રમ આત્યંતિક પ્રોગ્રામિંગની આગામી પુનરાવૃત્તિનો પ્રકાર છે તેથી તમે તેને એક ફ્રેમવર્ક કહી શકો તમે તેને એક ફિલસૂફી અથવા પદ્ધતિ કહી શકો છો હવે તે ખરેખર તમે જે શબ્દનો ઉપયોગ કરવા માંગો છો તે તમે જાણો છો પરંતુ દિવસના અંતે તે ફરીથી વિકાસકર્તા કેન્દ્રિત અને લોકો કેન્દ્રિત બનવાનો પ્રયાસ કરી રહ્યો છે અને દરેકની ખાતરી કરવા માટે શ્રેષ્ઠ પ્રયાસો સુયોજિત કરે છે ટીમ બરાબર જાણે છે કે તેઓએ શું કરવાનું છે અને તમારી પાસે ક્રોસ-ફંક્શનલ ટીમ છે જ્યારે હું ક્રોસ-ફંક્શનલ કહું છું ત્યારે મને ખાતરી છે કે જો તમે આ વિડિઓ જોઈ રહ્યા છો તે છે કારણ કે તમારી પાસે અન્ય કેટલાક દેવેલો છે પેમેન્ટનો અનુભવ અને જો તમે કરો છો તો તમે આ બિંદુની બરાબર આવી જશો જ્યારે તમે કોઈની સાથે વાત કરો ત્યારે તમે તે સુવિધા જોઇ છે અને અમે કોડ તરફ જોયું છે અને તે વ્યક્તિ તમને જાણે છે કે કોડ મને કંઈ નથી, તે કંઈ નથી મારી ચિંતાની વાત એ છે કે તમે સંપૂર્ણપણે અલગ કંઈક પર કામ કરી રહ્યાં છો તમે જાણો છો કે આપણે તે પ્રકારના વિકાસ માટે ઉપયોગમાં લઈએ છીએ જ્યાં લોકોને વ્યક્તિગત રૂપે ખબર હોય છે કે તેઓ શું કરવાનું છે અને તેઓ અન્ય વ્યક્તિ શું કરે છે તેની ચિંતા પણ કરતા નથી હવે તે સમય છે અમે ખરેખર સિલોઝને તોડી નાખીએ છીએ કારણ કે તમે તે ભાગને કોડિંગ કરી રહ્યાં નથી તેનો અર્થ એ નથી કે કોડ તમે લખી રહ્યાં છો તે કોડના ભાગની ચિંતા કરતું નથી તેથી દરેક વ્યક્તિએ એક સાથે આવવું પડશે અને તે જ એપ્લિકેશન પર કામ કરવું પડશે જે તમે જ છો ' એકવાર તમારી પાસે વપરાશકર્તા વાર્તાઓ અને આગામી બે અઠવાડિયામાં તમે કામ કરવાના છો તે બેકલોગ્સ પછી સ્ક્રમ ઉદાહરણમાં ક્રોસ-ફંક્શનલ ટીમને ક call લ કરો, તે ટીમમાં તમે શું ભૂમિકા ભજવશો તે ખરેખર વાંધો નથી, તે તમારી ટીમની જવાબદારી છે ખાતરી કરવા માટે કે ટી તે કાર્ય પૂર્ણ થઈ ગયું છે અને સમયરેખાને ધ્યાનમાં રાખીને પણ કાર્ય કરવામાં આવી રહ્યું છે ઉદાહરણ તરીકે મળવાનું તમે 20% એપ્લિકેશન વિકસિત કરી અને તમારા અંતિમ વપરાશકર્તા અથવા તમારા ક્લાયંટ વધુ સારા વિચાર સાથે પાછા આવ્યા અથવા જો તેમને કેટલાક ફેરફારોની જરૂર હોય જેથી તે ફેરફારો છે, તો તમારી પાસે તમારી યુએનટી પરીક્ષણ છે તમારી પાસે ક્લાયંટ સાઇડ ડ્યુટી પરીક્ષણ અને સ્વીકૃતિ છે તેનો અંત તેથી આત્યંતિક પ્રોગ્રામિંગ વિચારો કંઈક અંશે સ્ક્રમ જેવા જ છે પરંતુ દિવસના અંતે આ બધા ફિલસૂફી વિકાસકર્તાઓના જીવનને અંતિમ વપરાશકર્તાઓને વધુ સારી બનાવવાનો પ્રયાસ કરી રહ્યા છે અને તકનીકીતાઓ પર સમાધાન ન કરવાને બદલે શિપબલ ઉત્પાદનને વધુ સારું અને ઝડપી બનાવશે આ વિચાર બરાબર ચાલો આગળ વધીએ પછી તમારી પાસે દુર્બળ પ્રોગ્રામિંગ છે તેથી દુર્બળ સિદ્ધાંતો પણ આ થોડા સમય માટે છે તેથી શક્ય તેટલું ઝડપી નિર્ણય લેવાનું નક્કી કરવા માટે વેસ્ટ એમ્પ્લીફાઇ લર્નિંગને દૂર કરો, શક્ય તેટલું ઝડપી નિર્ણય લે છે અને ટીમની અખંડિતતાને સશક્તિકરણ કરે છે અને હવે હું આખું જોઉં છું. ' એમ ખૂબ ખાતરી છે કે આપણા બધા અથવા ઓછામાં ઓછા આપણામાંના મોટાભાગના નેટફ્લિક્સ વિશે જાગૃત છે હવે તમને એ જાણીને આશ્ચર્ય થશે કે નેટફ્લિક્સ તેમના ઉત્પાદનમાં દરરોજ 1000 થી વધુ ફેરફારો દબાણ કરી રહ્યું છે જો તમે ખરેખર નેટફ્લિક્સ ડેવલપમેન્ટ ટીમમાં કામ કર્યું હોય તો તમે જાણતા હશો કે આ લોકો દરરોજ ઉત્પાદનમાં એક હજાર ફેરફારોને આગળ ધપાવી રહ્યા છે હવે તમને કેવી રીતે લાગે છે કે તે શક્ય છે કે તેઓ તેની સમીક્ષા કર્યા વિના, તેની સમીક્ષા કર્યા વિના, બધાની સાથે પણ તેની સમીક્ષા કર્યા વિના દબાણ કરી રહ્યા નથી તે જગ્યાએ તે વસ્તુઓમાંથી તેઓ દરરોજ 1000 થી વધુ ફેરફારો કેવી રીતે જમાવવા માટે સક્ષમ છે હવે આ ખૂબ ઓછા ફેરફારો થઈ શકે છે જેમ કે તમે જાણો છો કે કેટલાક યુઆઈ ફિક્સ કરે છે કેટલાક ડેટાબેઝ કેટલાક ચુકવણી પ્રક્રિયાને સુધારે છે અને સુધારે છે તેથી આપણે ખરેખર શું છે તે અંગે ચિંતિત નથી, પરંતુ ફેરફારો શું છે તે વિશે અમને ખરેખર ચિંતા નથી હું એ હકીકત માટે જાણું છું કે તે તે સંખ્યા છે કે જે તેઓ ખરેખર દરરોજ દબાણ કરે છે તે શક્ય છે કારણ કે તમારો અર્થ ચપળતા દ્વારા અથવા બરણી બનીને ઝડપી જમાવટ છે જેથી તે ચપળતાનું સ્તર છે જે તમે ખરેખર તમારી પાસેની ક્ષણ મેળવી શકો છો સંગઠિત ટીમ જે બરણીના સિદ્ધાંતો પર કામ કરી રહી છે હવે સ્પષ્ટપણે ત્યાં બાહ્ય પરિબળો છે જેમ કે તમે જાણો છો કે તમારું ઇન્ફ્રાસ્ટ્રક્ચર કેવી રીતે છે તેથી હવે આ નોકરીના વિચારો છે હવે હું આશા રાખું છું કે હું તમારી ટીમને વધુ સારી વિકાસ ટીમ બનવામાં કેવી રીતે મદદ કરી શકું તે સ્પષ્ટ થઈ ગયું હતું જેથી તેના ત્રણ પાસાં યોગ્ય દાર્શનિક તકનીકી છે અને જે રીતે સ software ફ્ટવેર બનાવવામાં આવે છે તેથી દાર્શનિક શ્રેષ્ઠ પ્રયાસો છે જેમ કે તમે તમારી ટીમને કેવી રીતે વ્યાખ્યાયિત કરો છો જે સ્ક્રમ માસ્ટર છે જે પ્રોડક્ટ માલિક છે તે ટીમ શું છે તે શું છે તે શું છે જે તમે કરવાના કાર્યો છે, પછી તમારી પાસે તકનીકી બાજુ છે જો તમે કોઈ કોડ બનાવશો તો બરાબર કેવી રીતે બનાવશો શું તમે કોડને આપમેળે જમાવટ કરી શકો છો તમે કોડની સમીક્ષા કેવી રીતે કરી શકો છો તમે કોડને આપમેળે કેવી રીતે ચકાસી શકો છો અને પછી તેનો એક સ software ફ્ટવેર વિકાસ પાસા છે કે તમે માઇક્રો સર્વિસીસના વિચાર તરફ મોનોલિથિક એપ્લિકેશનથી દૂર આગળ વધી રહ્યા છો તેથી આ ત્રણ છે સમાંતર આગળ વધતા પાસાઓ અને દિવસના અંતે તે તમને મનની શાંતિ આપે છે તે તમારા પ્રોડક્ટ મેનેજરને માનસિક શાંતિ આપે છે અને અંતિમ વપરાશકર્તાને જમાવટના વધુ સારા વિચારો સાથે માનસિક શાંતિ આપે છે જેથી તમે ખરેખર ન હોવ ઇ તમારા ફેરફારો ખરેખર તૈનાત છે કે નહીં તે પુષ્ટિ કરતા 10 જુદા જુદા ડેસ્ક પર ફરવા માટે, તેથી જો તમને કોઈ પ્રશ્નો હોય તો તે મારા તરફથી બધું જ છે, એડ યુરેકા સાથે સંપર્કમાં આવવા માટે મને ખાતરી છે કે તમને ક્યાંક સંપર્ક વિગતો મળશે આ વિડિઓ અને તમારા સમય માટે તમારો ખૂબ ખૂબ આભાર તમારો દિવસ સારો છે અને ભાગો તેથી જો તમારી નોકરી આનું નિર્માણ કરવાનું છે અને ચાલો કહીએ કે તમારા સાથીએ આ વિરોધને ચલાવ્યો તે ક્ષણે તમે આ પ્રથમ વસ્તુને પરીક્ષણમાં ધકેલી દીધી છે, બીજી આઇટમ આ પ્રથમ વસ્તુને બદલશે જેથી તમે જાણો છો કે આગળની વસ્તુ શું છે જે તમે માની રહ્યા છોસોનબન પર કામ કરવું એ સ software ફ્ટવેર ડેવલપમેન્ટના સતત અમલીકરણ જેવું છે તેથી તમે સામાન્ય રીતે ચપળતાથી આનો અર્થ કરો છો, પછી ભલે તમે તેના વિશે અંગ્રેજી શબ્દની ચપળતાનો અર્થ ખરેખર ઝડપી યોગ્ય ચપળતાથી થવાનો અર્થ થાય છે કે તમે જે પણ કરી રહ્યા છો તે થઈ રહ્યું છે.ઝડપી ઉત્તરાધિકારમાં..